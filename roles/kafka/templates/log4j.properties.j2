log4j.rootLogger={{ kafka_rootLogger_level }}, stdout, kafkaAppender

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern={{ kafka_logs_pattern }}

log4j.appender.kafkaAppender=org.apache.log4j.RollingFileAppender
log4j.appender.kafkaAppender.File=/var/log/kafka/server.log
log4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.kafkaAppender.layout.ConversionPattern={{ kafka_logs_pattern }}
log4j.appender.kafkaAppender.MaxFileSize={{ kafka_logs_max_file_size }}
log4j.appender.kafkaAppender.MaxBackupIndex={{ kafka_logs_max_backup }}

log4j.appender.stateChangeAppender=org.apache.log4j.RollingFileAppender
log4j.appender.stateChangeAppender.File=/var/log/kafka/state-change.log
log4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.stateChangeAppender.layout.ConversionPattern={{ kafka_logs_pattern }}
log4j.appender.stateChangeAppender.MaxFileSize={{ kafka_logs_max_file_size }}
log4j.appender.stateChangeAppender.MaxBackupIndex={{ kafka_logs_max_backup }}

log4j.appender.requestAppender=org.apache.log4j.RollingFileAppender
log4j.appender.requestAppender.File=/var/log/kafka/kafka-request.log
log4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.requestAppender.layout.ConversionPattern={{ kafka_logs_pattern }}
log4j.appender.requestAppender.MaxFileSize={{ kafka_logs_max_file_size }}
log4j.appender.requestAppender.MaxBackupIndex={{ kafka_logs_max_backup }}

log4j.appender.cleanerAppender=org.apache.log4j.RollingFileAppender
log4j.appender.cleanerAppender.File=/var/log/kafka/log-cleaner.log
log4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.cleanerAppender.layout.ConversionPattern={{ kafka_logs_pattern }}
log4j.appender.cleanerAppender.MaxFileSize={{ kafka_logs_max_file_size }}
log4j.appender.cleanerAppender.MaxBackupIndex={{ kafka_logs_max_backup }}

log4j.appender.controllerAppender=org.apache.log4j.RollingFileAppender
log4j.appender.controllerAppender.File=/var/log/kafka/controller.log
log4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.controllerAppender.layout.ConversionPattern={{ kafka_logs_pattern }}
log4j.appender.controllerAppender.MaxFileSize={{ kafka_logs_max_file_size }}
log4j.appender.controllerAppender.MaxBackupIndex={{ kafka_logs_max_backup }}

log4j.appender.authorizerAppender=org.apache.log4j.RollingFileAppender
log4j.appender.authorizerAppender.File=/var/log/kafka/kafka-authorizer.log
log4j.appender.authorizerAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.authorizerAppender.layout.ConversionPattern={{ kafka_logs_pattern }}
log4j.appender.authorizerAppender.MaxFileSize={{ kafka_logs_max_file_size }}
log4j.appender.authorizerAppender.MaxBackupIndex={{ kafka_logs_max_backup }}

# Change the two lines below to adjust ZK client logging
log4j.logger.org.I0Itec.zkclient.ZkClient={{ kafka_logger_org_I0Itec_zkclient_ZkClient_level }}
log4j.logger.org.apache.zookeeper={{ kafka_logger_org_apache_zookeeper_level }}

# Change the two lines below to adjust the general broker logging level (output to server.log and stdout)
log4j.logger.kafka={{ kafka_logger_kafka_level }}
log4j.logger.org.apache.kafka={{ kafka_logger_org_apache_kafka_level }}

# Change to DEBUG or TRACE to enable request logging
log4j.logger.kafka.request.logger={{ kafka_logger_request_level }}, requestAppender
log4j.additivity.kafka.request.logger=false

# Uncomment the lines below and change log4j.logger.kafka.network.RequestChannel$ to TRACE for additional output
# related to the handling of requests
#log4j.logger.kafka.network.Processor=TRACE, requestAppender
#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender
#log4j.additivity.kafka.server.KafkaApis=false
log4j.logger.kafka.network.RequestChannel$={{ kafka_logger_network_RequestChannel_level }}, requestAppender
log4j.additivity.kafka.network.RequestChannel$=false

log4j.logger.kafka.controller={{ kafka_logger_controller_level }}, controllerAppender
log4j.additivity.kafka.controller=false

log4j.logger.kafka.log.LogCleaner={{ kafka_logger_log_LogCleaner_level }}, cleanerAppender
log4j.additivity.kafka.log.LogCleaner=false

log4j.logger.state.change.logger={{ kafka_logger_state_change_level }}, stateChangeAppender
log4j.additivity.state.change.logger=false

# Access denials are logged at INFO level, change to DEBUG to also log allowed accesses
log4j.logger.kafka.authorizer.logger={{ kafka_logger_authorizer_level }}, authorizerAppender
log4j.additivity.kafka.authorizer.logger=false
